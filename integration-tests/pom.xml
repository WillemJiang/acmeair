<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>acmeair-parent</artifactId>
        <groupId>acmeair</groupId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>integration-tests</artifactId>
    <packaging>pom</packaging>

    <modules>
        <module>integration-tests-common</module>
        <module>integration-tests-spring</module>
        <module>integration-tests-chassis</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>acmeair</groupId>
                <artifactId>integration-tests-common</artifactId>
                <version>2.0.0-SNAPSHOT</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-loader</artifactId>
        </dependency>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-loader</artifactId>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-customer-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-services-morphia</artifactId>
        </dependency>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-services-morphia</artifactId>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-common</artifactId>
        </dependency>
        <dependency>
            <groupId>acmeair</groupId>
            <artifactId>acmeair-booking-service</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zuul</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.seanyinx</groupId>
            <artifactId>unit-scaffolding</artifactId>
        </dependency>
        <dependency>
            <groupId>br.com.six2six</groupId>
            <artifactId>fixture-factory</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <systemPropertyVariables>
                        <spring.data.mongodb.host>${docker.hostname}</spring.data.mongodb.host>
                        <spring.data.mongodb.port>${mongo.port}</spring.data.mongodb.port>
                        <!-- Uses customer service address to load the data for integration test-->
                        <customer.service.address>http://${docker.hostname}:${customer.service.port}</customer.service.address>
                        <gateway.address>http://${docker.hostname}:${gateway.port}</gateway.address>
                        <cse.service.registry.address>http://${docker.hostname}:${service.center.port}</cse.service.registry.address>
                    </systemPropertyVariables>
                    <argLine>${jacoco.failsafe.argLine}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-default-properties</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        project.properties.setProperty('docker.hostname', 'localhost')
                                        log.info("Docker hostname is " + project.properties['docker.hostname'])
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-machine</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-dynamic-properties</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        def process = "docker-machine ip default".execute()
                                        process.waitFor()
                                        project.properties.setProperty('docker.hostname', process.in.text.trim())

                                        log.info("Docker hostname is " + project.properties['docker.hostname'])
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jacoco</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report-aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
